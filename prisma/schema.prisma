model Timetable {
  year     Int
  section String
  data    Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@id([year, section])
}
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  role      Role
  year      Int?
  section   String?
  attendances Attendance[]
  qrSessions QRSession[] @relation("TeacherQRSession")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Attendance {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  qrSession  QRSession @relation(fields: [qrSessionId], references: [id])
  qrSessionId String
  timestamp  DateTime @default(now())
  latitude   Float
  longitude  Float
}

model QRSession {
  id         String   @id @default(uuid())
  teacher    User     @relation("TeacherQRSession", fields: [teacherId], references: [id])
  teacherId  String
  year       Int
  section    String
  latitude   Float
  longitude  Float
  validFrom  DateTime
  validTo    DateTime
  attendances Attendance[]
  createdAt  DateTime @default(now())
}

enum Role {
  TEACHER
  STUDENT
}
